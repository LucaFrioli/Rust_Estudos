mod table;

use table::display_table;

fn main() {
    println!("In√≠cio do programa.\n\n");
    display_table();

    // O tipo char em Rust representa um √∫nico caractere Unicode escalar.
    // Vamos declarar um caractere simples:
    let c: char = 'A';
    println!("Declaramos c como um caractere: {c}");

    // O tipo char pode representar mais do que apenas caracteres ASCII.
    // Vamos declarar um caractere Unicode:
    let smiley: char = 'üòä';
    println!("Declaramos smiley como um caractere Unicode: {smiley}");

    // Podemos verificar o tamanho em bytes de um char. 
    // Note que sempre ter√° 4 bytes, independentemente do caractere armazenado.
    println!("O tamanho em bytes de um char √© sempre: {} bytes", std::mem::size_of::<char>());

    // Vamos explorar o valor num√©rico do caractere em Unicode:
    let unicode_value = smiley as u32; // Convertendo o char para seu c√≥digo Unicode
    println!("O valor Unicode do smiley √©: U+{:X}", unicode_value);

    // Explorando caracteres especiais e escapes:
    let newline: char = '\n';
    let tab: char = '\t';
    println!("Caractere especial para nova linha: {newline}");
    println!("Caractere especial para tabula√ß√£o: {tab}");

    // Compara√ß√£o de caracteres:
    let letra1: char = 'a';
    let letra2: char = 'b';
    println!("Comparando letras: {letra1} < {letra2} √© {}", letra1 < letra2);

    // M√©todos √∫teis para char:
    // Verificar se o caractere √© alfab√©tico:
    println!("'{letra1}' √© alfab√©tico? {}", letra1.is_alphabetic());

    // Verificar se √© num√©rico:
    let num: char = '9';
    println!("'{num}' √© num√©rico? {}", num.is_numeric());

    // Verificar se √© um caractere de espa√ßo:
    let space: char = ' ';
    println!("'{space}' √© um caractere de espa√ßo? {}", space.is_whitespace());

    // Transformar letras em mai√∫sculas ou min√∫sculas:
    println!("'{letra1}' em mai√∫scula √© '{}'", letra1.to_uppercase());
    println!("'{letra2}' em min√∫scula √© '{}'", letra2.to_lowercase());

    println!("\n\nFinal do programa.");
}


